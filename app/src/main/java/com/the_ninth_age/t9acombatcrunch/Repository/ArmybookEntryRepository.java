package com.the_ninth_age.t9acombatcrunch.Repository;

import com.the_ninth_age.t9acombatcrunch.Service.Units.Armybook;
import com.the_ninth_age.t9acombatcrunch.Service.Units.ArmybookEntry;
import com.the_ninth_age.t9acombatcrunch.Service.Units.ModelHeight;
import com.the_ninth_age.t9acombatcrunch.Service.Units.ModelType;
import com.the_ninth_age.t9acombatcrunch.Service.Units.SpecialRule;
import com.the_ninth_age.t9acombatcrunch.Service.Units.WeaponType;
import com.the_ninth_age.t9acombatcrunch.Service.Units.WeaponTypeShooting;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

public class ArmybookEntryRepository {

    OffensiveProfileRepository offensiveProfileRepository;
    private List<ArmybookEntry> armybookEntryList;

    public ArmybookEntryRepository() {
        offensiveProfileRepository = new OffensiveProfileRepository();
        armybookEntryList = new ArrayList<>(Arrays.asList(
                //Armybook entry - name, hp, def, res, arm, fortitude, aegis, leadership, baseWidth, baseLength, model height, model type, supporting rows, minModels, maxModels, champion possible, musician possible, standard possible, offensiveProfiles, offensiveProfiles repeated, championApplicable, possibleWeaponsList, possibleShootingWeaponsList, armybook
                new ArmybookEntry("Imperial Guard", 1, 4, 3, 4, 0, 0, 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 15, 50, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Imperial Guard")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.GREAT, WeaponType.HW_SHIELD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.EMPIRE_OF_SONNSTAHL, Arrays.asList()),

                new ArmybookEntry("Wildhorn Herd", 1, 4, 4, 7, 0, 0, 7, 25, 25, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 15, 50, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Wildhorn")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.PAIRED)), Arrays.asList(Arrays.asList(WeaponTypeShooting.THROWING, WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Mongrel Herd", 1, 3, 3, 7, 0, 0, 6, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 20, 50, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Mongrel")), Arrays.asList(1),  Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.SPEAR_SHIELD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Mongrel Raiders", 1, 3, 3, 7, 0, 0, 6, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 20, 1, 1, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Mongrel")), Arrays.asList(1),  Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.BOW)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Feral Hounds", 1, 4, 3, 7, 0, 0, 5, 25, 50, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 5, 20, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Feral Hound")), Arrays.asList(1),  Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Longhorn Herd", 1, 4, 4, 5, 0, 0, 8, 25, 25, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 40, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Longhorn")), Arrays.asList(1),  Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.GREAT, WeaponType.HALBERD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Minotaurs", 3, 3, 4, 6, 0, 0, 7, 40, 40, ModelHeight.LARGE, ModelType.INFANTRY, true, 1, 3, 10, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Minotaur")), Arrays.asList(1),  Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.PAIRED, WeaponType.GREAT)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Centaurs", 1, 4, 4, 6, 0, 0, 7, 25, 50, ModelHeight.STANDARD, ModelType.CAVALRY, true, 1, 5, 15, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Centaur")), Arrays.asList(1),  Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.GREAT, WeaponType.PAIRED, WeaponType.LANCE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.THROWING, WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Raiding Chariot", 4, 4, 4, 4, 0, 0, 8, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 3, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Wildhorn"), offensiveProfileRepository.findSpecific("Longhorn"), offensiveProfileRepository.findSpecific("War Hog"), offensiveProfileRepository.findSpecific("Chassis")), Arrays.asList(1, 1, 2, 1),  Arrays.asList(0, 0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.LIGHT_LANCE), Arrays.asList(WeaponType.GREAT), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Razortusk Herd", 3, 3, 5, 7, 0, 0, 6, 50, 50, ModelHeight.LARGE, ModelType.BEAST, true, 1, 1, 10, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Razortusk")), Arrays.asList(1),  Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Razortusk Chariot", 5, 4, 5, 4, 0, 0, 8, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Wildhorn"), offensiveProfileRepository.findSpecific("Longhorn"), offensiveProfileRepository.findSpecific("Razortusk"), offensiveProfileRepository.findSpecific("Chassis")), Arrays.asList(1, 1, 1, 1),  Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.LIGHT_LANCE), Arrays.asList(WeaponType.GREAT), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Briar Beast", 3, 3, 5, 7, 0, 0, 10, 40, 40, ModelHeight.LARGE, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Briar Beast")), Arrays.asList(1),  Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Gargoyles", 1, 4, 4, 7, 0, 0, 7, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 5, 10, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Gargoyle")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Cyclops", 6, 2, 5, 7, 0, 5, 8, 50, 100, ModelHeight.GIGANTIC, ModelType.INFANTRY, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Cyclops")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Gortach", 6, 3, 6, 7, 0, 0, 9, 50, 100, ModelHeight.GIGANTIC, ModelType.INFANTRY,true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Gortach")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),
                new ArmybookEntry("Jabberwock", 5, 4, 5, 4, 0, 0, 8, 50, 100, ModelHeight.GIGANTIC, ModelType.BEAST,true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Jabberwock")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.AURA_OF_MADNESS)),
                new ArmybookEntry("Beast Giant", 7, 3, 5, 1, 0, 0, 8, 50, 75, ModelHeight.GIGANTIC, ModelType.INFANTRY, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Beast Giant")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.UPROOTED_TREE, WeaponType.GIANT_CLUB, WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList()),

                new ArmybookEntry("Dread Legionnaires", 1, 4, 3, 6, 0, 0, 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 15, 50, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Legionnaire")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.SPEAR_SHIELD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Corsairs", 1, 4, 3, 4, 0, 0, 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 35, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Corsair")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON, WeaponType.PAIRED)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_HANDBOW, WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Blades of Nabh", 1, 2, 3, 7, 0, 0, 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Blade of Nabh")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.PAIRED)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Repeater Auxiliaries", 1, 4, 3, 6, 0, 0, 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Repeater Auxiliary")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON, WeaponType.HW_SHIELD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_CROSSBOW)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Dark Raiders", 1, 4, 3, 5, 0, 0, 8, 25, 50, ModelHeight.STANDARD, ModelType.CAVALRY, false, 1, 5, 15, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dark Raider"), offensiveProfileRepository.findSpecific("Elven Horse")), Arrays.asList(1, 1), Arrays.asList(1, 0), Arrays.asList(Arrays.asList(WeaponType.LIGHT_LANCE, WeaponType.LIGHT_LANCE_SHIELD), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_CROSSBOW, WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Raven Cloaks", 1, 5, 3, 6, 0, 0, 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 5, 10, 1, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Raven Cloak")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON, WeaponType.GREAT, WeaponType.PAIRED)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_CROSSBOW)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Tower Guard", 1, 6, 3, 5, 0, 0, 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Tower Guard")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HALBERD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Dread Knights", 1, 5, 4, 3, 0, 0, 9, 20, 20, ModelHeight.STANDARD, ModelType.CAVALRY, false, 1, 5, 12, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Knight"), offensiveProfileRepository.findSpecific("Raptor")), Arrays.asList(1, 1), Arrays.asList(1, 0), Arrays.asList(Arrays.asList(WeaponType.LANCE_SHIELD), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Raptor Chariot", 4, 5, 5, 3, 0, 0, 9, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Knight"), offensiveProfileRepository.findSpecific("Raptor"), offensiveProfileRepository.findSpecific("Chassis")), Arrays.asList(2, 2, 1), Arrays.asList(0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.LANCE), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_CROSSBOW), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Harpies", 1, 3, 3, 7, 0, 0, 6, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 5, 15, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Harpy")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Dread Judges", 1, 5, 3, 5, 0, 0, 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Judge")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.GREAT)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Dancers of Yema", 1, 5, 3, 6, 0, 4, 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dancer of Yema")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.HANDWEAPON, WeaponType.SPEAR_SHIELD, WeaponType.SPEAR, WeaponType.GREAT, WeaponType.PAIRED, WeaponType.HALBERD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Medusa", 3, 5, 4, 7, 0, 5, 8, 40, 40, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Medusa")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.HALBERD, WeaponType.PAIRED, WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Dark Acolytes", 1, 4, 3, 6, 0, 4, 8, 25, 50, ModelHeight.STANDARD, ModelType.CAVALRY, false, 1, 5, 10, 1, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Dark Acolyte"), offensiveProfileRepository.findSpecific("Elven Horse")), Arrays.asList(1, 1), Arrays.asList(1, 0), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Divine Altar", 5, 5, 5, 6, 0, 4, 8, 60, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Altar Disciple"), offensiveProfileRepository.findSpecific("Avatar of the Gods"), offensiveProfileRepository.findSpecific("Chassis")), Arrays.asList(3, 1, 1), Arrays.asList(0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.LIGHT_LANCE, WeaponType.PAIRED, WeaponType.HANDWEAPON), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Hunting Chariot", 4, 4, 4, 4, 0, 0, 8, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Corsair"), offensiveProfileRepository.findSpecific("Elven Horse"), offensiveProfileRepository.findSpecific("Chassis")), Arrays.asList(2, 2, 1), Arrays.asList(0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.LIGHT_LANCE), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE, WeaponTypeShooting.NONE, WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Dread Reaper", 4, 1, 4, 6, 0, 0, 8, 60, 60, ModelHeight.STANDARD, ModelType.CONSTRUCT, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Legionnaire")), Arrays.asList(2), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Kraken", 5, 5, 5, 4, 0, 0, 8, 50, 100, ModelHeight.GIGANTIC, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Kraken")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),
                new ArmybookEntry("Hydra", 5, 5, 5, 4, 4, 0, 8, 50, 100, ModelHeight.GIGANTIC, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Hydra")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList()),

                new ArmybookEntry("Clan Warriors", 1, 4, 4, 5, 0, 0, 9, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 40, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Clan Warrior")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.PAIRED, WeaponType.SPEAR_SHIELD, WeaponType.GREAT, WeaponType.HW_SHIELD, WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.THROWING, WeaponTypeShooting.NONE)), Armybook.DWARVEN_HOLDS, Arrays.asList()),
                new ArmybookEntry("Greybeards", 1, 5, 4, 5, 0, 0, 9, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Greybeard")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.GREAT, WeaponType.HW_SHIELD, WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.THROWING, WeaponTypeShooting.NONE)), Armybook.DWARVEN_HOLDS, Arrays.asList()),
                new ArmybookEntry("Clan Marksmen", 1, 4, 4, 5, 0, 0, 9, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 25, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Clan Marksman")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.GREAT, WeaponType.HW_SHIELD, WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.CROSSBOW, WeaponTypeShooting.GUILD_CRAFTED_HANDGUN)), Armybook.DWARVEN_HOLDS, Arrays.asList()),
                new ArmybookEntry("Deep Watch", 1, 5, 4, 4, 0, 0, 9, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 15, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Deep Watch")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DWARVEN_HOLDS, Arrays.asList()),
                new ArmybookEntry("King's Guard", 1, 5, 4, 4, 0, 0, 9, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 15, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("King's Guard")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.GREAT)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DWARVEN_HOLDS, Arrays.asList()),
                new ArmybookEntry("Miners", 1, 4, 4, 5, 0, 0, 9, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 20, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Miner")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.GREAT, WeaponType.PAIRED, WeaponType.HW_SHIELD, WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.THROWING, WeaponTypeShooting.PISTOL)), Armybook.DWARVEN_HOLDS, Arrays.asList()),
                new ArmybookEntry("Rangers", 1, 4, 4, 5, 0, 0, 9, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 8, 20, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Ranger")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.PAIRED, WeaponType.GREAT, WeaponType.HW_SHIELD, WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.THROWING, WeaponTypeShooting.CROSSBOW, WeaponTypeShooting.NONE)), Armybook.DWARVEN_HOLDS, Arrays.asList()),
                new ArmybookEntry("Seekers", 1, 4, 4, 7, 0, 6, 10, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 5, 25, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Seeker")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.GREAT, WeaponType.PAIRED)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DWARVEN_HOLDS, Arrays.asList())
        ));
        //Armybook entry - name, hp, def, res, arm, fortitude, aegis, leadership, baseWidth, baseLength, model height, model type, supporting rows, minModels, maxModels, champion possible, musician possible, standard possible, offensiveProfiles, offensiveProfiles repeated, championApplicable, possibleWeaponsList, possibleShootingWeaponsList, armybook
    }

    public ArmybookEntry findSpecific(String name) {
        for (ArmybookEntry armybookEntry : armybookEntryList) {
            if (armybookEntry.getName().equals(name)) {
                return armybookEntry;
            }
        }
        return null;
    }

    public List<String> getNamesAll() {
        List<String> allNames = new ArrayList<>();
        for (ArmybookEntry armybookEntry : armybookEntryList) {
            allNames.add(armybookEntry.getName());
        }
        return allNames;
    }

    public List<String> getNamesArmybook(String armybookName) {
        List<String> names = new ArrayList<>();
        for (ArmybookEntry armybookEntry : armybookEntryList) {
            if (armybookEntry.getArmybook().toString().equals(armybookName)) {
                names.add(armybookEntry.getName());
            }
        }
        return names;
    }

    public List<String> getArmybookNames() {
        List<String> armybookNames = new ArrayList<>();
        for (ArmybookEntry armybookEntry : armybookEntryList) {
            Armybook armybook = armybookEntry.getArmybook();
            String armybookName = armybook.toString();
            if (armybookNames.contains(armybookName) == false) {
                armybookNames.add(armybookName);
            }
        }
        return armybookNames;
    }
}
