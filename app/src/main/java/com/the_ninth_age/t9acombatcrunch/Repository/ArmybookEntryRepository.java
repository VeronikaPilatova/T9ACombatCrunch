package com.the_ninth_age.t9acombatcrunch.Repository;

import com.the_ninth_age.t9acombatcrunch.Service.Units.ArmorType;
import com.the_ninth_age.t9acombatcrunch.Service.Units.Armybook;
import com.the_ninth_age.t9acombatcrunch.Service.Units.ArmybookEntry;
import com.the_ninth_age.t9acombatcrunch.Service.Units.ModelHeight;
import com.the_ninth_age.t9acombatcrunch.Service.Units.ModelType;
import com.the_ninth_age.t9acombatcrunch.Service.Units.SpecialRule;
import com.the_ninth_age.t9acombatcrunch.Service.Units.WeaponType;
import com.the_ninth_age.t9acombatcrunch.Service.Units.WeaponTypeShooting;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

public class ArmybookEntryRepository {

    OffensiveProfileRepository offensiveProfileRepository;
    private List<ArmybookEntry> armybookEntryList;

    public ArmybookEntryRepository() {
        offensiveProfileRepository = new OffensiveProfileRepository();
        armybookEntryList = new ArrayList<>(Arrays.asList(
                new ArmybookEntry("Wildhorn Herd", 1, 4, 4, 0, ArmorType.NONE, 0, 0, "5\u201d", "10\u201d", 7, 25, 25, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 15, 50, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Wildhorn")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.PAIRED)), Arrays.asList(Arrays.asList(WeaponTypeShooting.THROWING, WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.PACK_TACTICS, SpecialRule.SCORING, SpecialRule.STRIDER_FOREST), Arrays.asList(SpecialRule.AMBUSH)),
                new ArmybookEntry("Mongrel Herd", 1, 3, 3, 0, ArmorType.NONE, 0, 0, "5\u201d", "10\u201d", 6, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 20, 50, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Mongrel")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.SPEAR_SHIELD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.PACK_TACTICS, SpecialRule.SCORING, SpecialRule.STRIDER_FOREST), Arrays.asList(SpecialRule.AMBUSH)),
                new ArmybookEntry("Mongrel Raiders", 1, 3, 3, 0, ArmorType.NONE, 0, 0, "5\u201d", "10\u201d", 6, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 20, 1, 1, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Mongrel")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.BOW)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.LIGHT_TROOPS, SpecialRule.PACK_TACTICS, SpecialRule.SKIRMISHER, SpecialRule.STRIDER_FOREST), Arrays.asList(SpecialRule.AMBUSH_SCOUT)),
                new ArmybookEntry("Feral Hounds", 1, 4, 3, 0, ArmorType.NONE, 0, 0, "8\u201d", "16\u201d", 5, 25, 50, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 5, 20, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Feral Hound")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.AMBUSH, SpecialRule.INSIGNIFICANT, SpecialRule.STRIDER_FOREST, SpecialRule.VANGUARD), Arrays.asList()),
                new ArmybookEntry("Longhorn Herd", 1, 4, 4, 0, ArmorType.HEAVY, 0, 0, "5\u201d", "10\u201d", 8, 25, 25, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 40, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Longhorn")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HALBERD, WeaponType.GREAT)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.BODYGUARD, SpecialRule.PACK_TACTICS, SpecialRule.SCORING, SpecialRule.STRIDER_FOREST), Arrays.asList(SpecialRule.AMBUSH)),
                new ArmybookEntry("Minotaurs", 3, 3, 4, 0, ArmorType.LIGHT, 0, 0, "6\u201d", "12\u201d", 7, 40, 40, ModelHeight.LARGE, ModelType.INFANTRY, true, 1, 3, 10, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Minotaur")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.GREAT, WeaponType.PAIRED)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.FRENZY, SpecialRule.SCORING, SpecialRule.STRIDER_FOREST), Arrays.asList()),
                new ArmybookEntry("Centaurs", 1, 4, 4, 0, ArmorType.LIGHT, 0, 0, "8\u201d", "16\u201d", 7, 25, 50, ModelHeight.STANDARD, ModelType.CAVALRY, true, 1, 5, 15, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Centaur")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.LANCE_SHIELD, WeaponType.PAIRED, WeaponType.GREAT, WeaponType.HW_SHIELD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.THROWING, WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.DRUNKARD, SpecialRule.SCORING, SpecialRule.STRIDER_FOREST), Arrays.asList(SpecialRule.AMBUSH)),
                new ArmybookEntry("Raiding Chariot", 4, 4, 4, 2, ArmorType.LIGHT, 0, 0, "7\u201d", "7\u201d", 8, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 3, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Wildhorn"), offensiveProfileRepository.findSpecific("Longhorn"), offensiveProfileRepository.findSpecific("War Hog"), offensiveProfileRepository.findSpecific("Chassis (Light Chariot)")), Arrays.asList(1, 1, 2, 1), Arrays.asList(0, 0, 0, 0), Arrays.asList(0, 0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.LIGHT_LANCE), Arrays.asList(WeaponType.GREAT), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.LIGHT_TROOPS, SpecialRule.STRIDER_FOREST, SpecialRule.SWIFTSTRIDE), Arrays.asList()),
                new ArmybookEntry("Razortusk Herd", 3, 3, 5, 0, ArmorType.NONE, 0, 0, "7\u201d", "14\u201d", 6, 50, 50, ModelHeight.LARGE, ModelType.BEAST, true, 1, 1, 10, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Razortusk")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.STRIDER_FOREST), Arrays.asList()),
                new ArmybookEntry("Razortusk Chariot", 5, 4, 5, 1, ArmorType.HEAVY, 0, 0, "7\u201d", "7\u201d", 8, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Wildhorn"), offensiveProfileRepository.findSpecific("Longhorn"), offensiveProfileRepository.findSpecific("Razortusk"), offensiveProfileRepository.findSpecific("Chassis (Heavy Chariot)")), Arrays.asList(1, 1, 1, 1), Arrays.asList(0, 0, 0, 0), Arrays.asList(0, 0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.LIGHT_LANCE), Arrays.asList(WeaponType.GREAT), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.HUNTING_HORN, SpecialRule.LIGHT_TROOPS, SpecialRule.STRIDER_FOREST, SpecialRule.SWIFTSTRIDE), Arrays.asList()),
                new ArmybookEntry("Briar Beast", 3, 3, 5, 0, ArmorType.NONE, 0, 0, "3D6", "-", 10, 40, 40, ModelHeight.LARGE, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Briar Beast")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.RANDOM_MOVEMENT_3D6, SpecialRule.SLEEPER, SpecialRule.STRIDER_FOREST, SpecialRule.UNBREAKABLE), Arrays.asList()),
                new ArmybookEntry("Gargoyles", 1, 4, 4, 0, ArmorType.NONE, 0, 0, "Ground 5\u201d \nFly 9\u201d", "Ground 10\u201d \nFly 18\u201d", 7, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 5, 10, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Gargoyle")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.FLY, SpecialRule.LIGHT_TROOPS, SpecialRule.SKIRMISHER, SpecialRule.STRIDER_FOREST, SpecialRule.SWIFTSTRIDE), Arrays.asList()),
                new ArmybookEntry("Cyclops", 6, 2, 5, 0, ArmorType.NONE, 0, 5, "7\u201d", "14\u201d", 8, 50, 100, ModelHeight.GIGANTIC, ModelType.INFANTRY, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Cyclops")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.MAGIC_RESISTANCE_3, SpecialRule.STRIDER_FOREST), Arrays.asList()),
                new ArmybookEntry("Gortach", 6, 3, 6, 0, ArmorType.NONE, 0, 0, "7\u201d", "14\u201d", 9, 50, 100, ModelHeight.GIGANTIC, ModelType.INFANTRY, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Gortach")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.FRENZY, SpecialRule.STRIDER_FOREST, SpecialRule.STUBBORN), Arrays.asList()),
                new ArmybookEntry("Jabberwock", 5, 4, 5, 3, ArmorType.NONE, 0, 0, "Ground 8\u201d \nFly 8\u201d", "Ground 16\u201d \nFly 16\u201d", 8, 50, 100, ModelHeight.GIGANTIC, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Jabberwock")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.AURA_OF_MADNESS, SpecialRule.FLY, SpecialRule.LIGHT_TROOPS, SpecialRule.STRIDER_FOREST), Arrays.asList()),
                new ArmybookEntry("Beast Giant", 7, 3, 5, 1, ArmorType.NONE, 0, 0, "7\u201d", "14\u201d", 8, 50, 75, ModelHeight.GIGANTIC, ModelType.INFANTRY, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Beast Giant")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.UPROOTED_TREE, WeaponType.GIANT_CLUB, WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.BEAST_HERDS, Arrays.asList(SpecialRule.DRUNKARD, SpecialRule.STRIDER_FOREST), Arrays.asList(SpecialRule.BIG_BROTHER)),
                new ArmybookEntry("Imps", 1, 2, 2, 0, ArmorType.NONE, 0, 5, "5\u201d", "10\u201d", 6, 25, 25, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 10, 25, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Imp")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.ENERGY_BOLTS)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.SCORING, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Succubi", 1, 4, 3, 0, ArmorType.NONE, 0, 5, "5\u201d", "10\u201d", 7, 25, 25, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 10, 25, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Succubus")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.TALON_SCYTHES)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.SCORING, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Lemures", 1, 3, 5, 0, ArmorType.NONE, 0, 5, "4\u201d", "8\u201d", 7, 25, 25, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 10, 25, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Lemure")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.PARRY, SpecialRule.FEARLESS, SpecialRule.SCORING, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Myrmidons", 1, 3, 3, 0, ArmorType.NONE, 0, 5, "5\u201d", "10\u201d", 8, 25, 25, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 10, 25, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Myrmidon")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.SCORING, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Eidolons", 1, 2, 4, 0, ArmorType.NONE, 0, 6, "5\u201d", "10\u201d", 7, 25, 25, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 5, 10, 1, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Eidolon")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.LIGHT_TROOPS, SpecialRule.SKIRMISHER, SpecialRule.SUPERNAL, SpecialRule.WIZARD_CONCLAVE), Arrays.asList()),
                new ArmybookEntry("Hellhounds", 1, 3, 4, 0, ArmorType.NONE, 0, 5, "9\u201d", "18\u201d", 7, 25, 50, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 5, 15, 1, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Hellhound")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.HELLISH_GROWL, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Threshing Engine", 4, 4, 4, 0, ArmorType.NONE, 0, 5, "10\u201d", "10\u201d", 7, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Tiller"), offensiveProfileRepository.findSpecific("Draft Beast"), offensiveProfileRepository.findSpecific("Chassis (Threshing Engine)")), Arrays.asList(2, 2, 1), Arrays.asList(0, 0, 0), Arrays.asList(0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.SUPERNAL, SpecialRule.SWIFTSTRIDE), Arrays.asList()),
                new ArmybookEntry("Titanslayer Chariot", 4, 4, 5, 0, ArmorType.NONE, 0, 5, "6\u201d", "6\u201d", 8, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Myrmidon"), offensiveProfileRepository.findSpecific("Chtonic Machinator"), offensiveProfileRepository.findSpecific("Chassis (Titanslayer Chariot)")), Arrays.asList(2, 1, 1), Arrays.asList(0, 0, 0), Arrays.asList(0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.MOUNTAIN_BREAKER, SpecialRule.SUPERNAL, SpecialRule.SWIFTSTRIDE), Arrays.asList()),
                new ArmybookEntry("Clawed Fiends", 3, 4, 4, 0, ArmorType.NONE, 0, 5, "9\u201d", "18\u201d", 7, 40, 40, ModelHeight.LARGE, ModelType.BEAST, true, 1, 3, 6, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Clawed Fiend")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.SCORING, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Mageblight Gremlins", 5, 3, 3, 0, ArmorType.NONE, 0, 5, "5\u201d", "10\u201d", 6, 40, 40, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 2, 4, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Mageblight Gremlin")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.LIGHT_TROOPS, SpecialRule.SKIRMISHER, SpecialRule.SUPERNAL, SpecialRule.VEIL_STALKER, SpecialRule.HARD_TARGET), Arrays.asList()),
                new ArmybookEntry("Hoarders", 4, 6, 5, 0, ArmorType.NONE, 0, 5, "5\u201d", "10\u201d", 8, 40, 40, ModelHeight.LARGE, ModelType.BEAST, true, 1, 3, 6, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Hoarder")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.SCORING, SpecialRule.STRIDER, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Sirens", 1, 5, 3, 0, ArmorType.NONE, 0, 5, "9\u201d", "18\u201d", 9, 25, 50, ModelHeight.STANDARD, ModelType.CAVALRY, false, 1, 5, 15, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Siren"), offensiveProfileRepository.findSpecific(" Pale Steed")), Arrays.asList(1, 1), Arrays.asList(1, 0), Arrays.asList(0, 1), Arrays.asList(Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.ELUSIVE, SpecialRule.FEARLESS, SpecialRule.FEIGNED_FLIGHT, SpecialRule.LIGHT_TROOPS, SpecialRule.STRIDER, SpecialRule.SUPERNAL, SpecialRule.VANGUARD), Arrays.asList()),
                new ArmybookEntry("Blazing Glories", 5, 10, 5, 0, ArmorType.NONE, 0, 5, "7\u201d", "14\u201d", 8, 50, 50, ModelHeight.LARGE, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Blazing Glory")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FALLING_STAR, SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.SUPERNAL, SpecialRule.TOWERING_PRESENCE), Arrays.asList()),
                new ArmybookEntry("Hope Harvester", 5, 4, 5, 3, ArmorType.NONE, 0, 5, "5\u201d", "10\u201d", 7, 50, 100, ModelHeight.LARGE, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Hope Harvester")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.NOT_LEADER, SpecialRule.SUPERNAL, SpecialRule.WAR_PLATFORM), Arrays.asList()),
                new ArmybookEntry("Brazen Beasts", 4, 3, 4, 0, ArmorType.NONE, 0, 5, "7\u201d", "14\u201d", 8, 50, 75, ModelHeight.LARGE, ModelType.CAVALRY, false, 1, 3, 6, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Daredevil"), offensiveProfileRepository.findSpecific(" Brazen Beast")), Arrays.asList(1, 1), Arrays.asList(1, 0), Arrays.asList(0, 1), Arrays.asList(Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.SCORING, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Furies", 1, 3, 3, 0, ArmorType.NONE, 0, 6, "Ground 4\u201d \nFly 10\u201d", "Ground 8\u201d \nFly 20\u201d", 5, 25, 25, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 5, 15, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Fury")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.FLY, SpecialRule.LIGHT_TROOPS, SpecialRule.SKIRMISHER, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Veil Serpents", 3, 4, 4, 0, ArmorType.NONE, 0, 5, "Ground 2\u201d \nFly 9\u201d", "Ground 4\u201d \nFly 12\u201d", 7, 40, 40, ModelHeight.LARGE, ModelType.BEAST, true, 1, 3, 6, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Veil Serpent")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.FLY, SpecialRule.LIGHT_TROOPS, SpecialRule.MORPHLINGS, SpecialRule.SUPERNAL, SpecialRule.WIZARD_CONCLAVE), Arrays.asList()),
                new ArmybookEntry("Bloat Flies", 5, 2, 4, 0, ArmorType.NONE, 0, 6, "Ground 2\u201d \nFly 8\u201d", "Ground 4\u201d \nFly 12\u201d", 8, 50, 75, ModelHeight.LARGE, ModelType.BEAST, true, 1, 2, 6, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Bloat Fly")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DAEMON_LEGIONS, Arrays.asList(SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.FLY, SpecialRule.LIGHT_TROOPS, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Dread Legionnaires", 1, 4, 3, 0, ArmorType.LIGHT, 0, 0, "5\u201d", "10\u201d", 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 15, 50, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Legionnaire")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.SPEAR_SHIELD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.SCORING), Arrays.asList()),
                new ArmybookEntry("Corsairs", 1, 4, 3, 0, ArmorType.LIGHT, 0, 0, "5\u201d", "10\u201d", 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 35, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Corsair")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON, WeaponType.PAIRED)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_HANDBOW, WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.SCORING, SpecialRule.KRAKEN_HIDE), Arrays.asList()),
                new ArmybookEntry("Blades of Nabh", 1, 2, 3, 0, ArmorType.NONE, 0, 0, "5\u201d", "10\u201d", 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Blade of Nabh")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.PAIRED)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.FEARLESS, SpecialRule.FRENZY, SpecialRule.SCORING), Arrays.asList()),
                new ArmybookEntry("Repeater Auxiliaries", 1, 4, 3, 0, ArmorType.LIGHT, 0, 0, "5\u201d", "10\u201d", 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Repeater Auxiliary")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON, WeaponType.HW_SHIELD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_CROSSBOW)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.SCORING), Arrays.asList()),
                new ArmybookEntry("Dark Raiders", 1, 4, 3, 1, ArmorType.LIGHT, 0, 0, "9\u201d", "18\u201d", 8, 25, 50, ModelHeight.STANDARD, ModelType.CAVALRY, false, 1, 5, 15, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dark Raider"), offensiveProfileRepository.findSpecific(" Elven Horse")), Arrays.asList(1, 1), Arrays.asList(1, 0), Arrays.asList(0, 1), Arrays.asList(Arrays.asList(WeaponType.LIGHT_LANCE, WeaponType.LIGHT_LANCE_SHIELD), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_CROSSBOW, WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.FEIGNED_FLIGHT, SpecialRule.LIGHT_TROOPS, SpecialRule.VANGUARD), Arrays.asList()),
                new ArmybookEntry("Raven Cloaks", 1, 5, 3, 0, ArmorType.LIGHT, 0, 0, "5\u201d", "10\u201d", 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 5, 10, 1, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Raven Cloak")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.GREAT, WeaponType.PAIRED, WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_CROSSBOW)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.LIGHT_TROOPS, SpecialRule.SCOUT, SpecialRule.SKIRMISHER), Arrays.asList()),
                new ArmybookEntry("Tower Guard", 1, 6, 3, 0, ArmorType.HEAVY, 0, 0, "5\u201d", "10\u201d", 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Tower Guard")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HALBERD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.BODYGUARD, SpecialRule.SCORING, SpecialRule.FEARLESS), Arrays.asList()),
                new ArmybookEntry("Dread Knights", 1, 5, 4, 2, ArmorType.HEAVY, 0, 0, "7\u201d", "14\u201d", 9, 25, 50, ModelHeight.STANDARD, ModelType.CAVALRY, false, 1, 5, 12, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Knight"), offensiveProfileRepository.findSpecific(" Raptor")), Arrays.asList(1, 1), Arrays.asList(1, 0), Arrays.asList(0, 1), Arrays.asList(Arrays.asList(WeaponType.LANCE_SHIELD), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.SCORING, SpecialRule.SCENT_OF_BLOOD), Arrays.asList()),
                new ArmybookEntry("Raptor Chariot", 4, 5, 5, 2, ArmorType.HEAVY, 0, 0, "7\u201d", "7\u201d", 9, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Knight"), offensiveProfileRepository.findSpecific("Raptor"), offensiveProfileRepository.findSpecific("Chassis (Heavy Chariot)")), Arrays.asList(2, 2, 1), Arrays.asList(0, 0, 0), Arrays.asList(0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.LANCE), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.REPEATER_CROSSBOW), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.SWIFTSTRIDE, SpecialRule.SCENT_OF_BLOOD), Arrays.asList()),
                new ArmybookEntry("Harpies", 1, 3, 3, 0, ArmorType.NONE, 0, 0, "Ground 5\u201d\nFly 10\u201d", "Ground 10\u201d\nFly 20\u201d", 6, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 5, 15, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Harpy")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.FLY, SpecialRule.LIGHT_TROOPS, SpecialRule.SWIFTSTRIDE, SpecialRule.INSIGNIFICANT, SpecialRule.SKIRMISHER), Arrays.asList()),
                new ArmybookEntry("Dread Judges", 1, 5, 3, 0, ArmorType.HEAVY, 0, 0, "5\u201d", "10\u201d", 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Judge")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.EXECUTIONER_BLADE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.CULT_NABH, SpecialRule.SCORING), Arrays.asList()),
                new ArmybookEntry("Dancers of Yema", 1, 5, 3, 0, ArmorType.LIGHT, 0, 4, "5\u201d", "10\u201d", 8, 20, 20, ModelHeight.STANDARD, ModelType.INFANTRY, true, 1, 10, 30, 1, 1, 1, Arrays.asList(offensiveProfileRepository.findSpecific("Dancer of Yema")), Arrays.asList(1), Arrays.asList(1), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HW_SHIELD, WeaponType.PAIRED, WeaponType.SPEAR, WeaponType.GREAT, WeaponType.HALBERD)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.CULT_YEMA, SpecialRule.SCORING), Arrays.asList()),
                new ArmybookEntry("Medusa", 3, 5, 4, 0, ArmorType.NONE, 0, 5, "6\u201d", "12\u201d", 8, 40, 40, ModelHeight.STANDARD, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Medusa")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HALBERD, WeaponType.PAIRED, WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.CULT_YEMA, SpecialRule.FEAR, SpecialRule.FEARLESS, SpecialRule.SUPERNAL), Arrays.asList()),
                new ArmybookEntry("Dark Acolytes", 1, 4, 3, 1, ArmorType.NONE, 0, 4, "9\u201d", "18\u201d", 8, 25, 50, ModelHeight.STANDARD, ModelType.CAVALRY, false, 1, 5, 10, 1, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Dark Acolyte"), offensiveProfileRepository.findSpecific(" Elven Horse")), Arrays.asList(1, 1), Arrays.asList(1, 0), Arrays.asList(0, 1), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.LIGHT_TROOPS, SpecialRule.WIZARD_CONCLAVE), Arrays.asList()),
                new ArmybookEntry("Divine Altar", 5, 5, 5, 1, ArmorType.LIGHT, 0, 4, "5\u201d", "10\u201d", 8, 60, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Altar Disciple"), offensiveProfileRepository.findSpecific("Avatar of the Gods"), offensiveProfileRepository.findSpecific("Chassis (Heavy Chariot)")), Arrays.asList(3, 1, 1), Arrays.asList(0), Arrays.asList(0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON, WeaponType.LIGHT_LANCE, WeaponType.PAIRED), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.DIVINE_BLESSINGS, SpecialRule.FEAR, SpecialRule.TOWERING_PRESENCE, SpecialRule.WAR_PLATFORM, SpecialRule.NOT_LEADER), Arrays.asList()),
                new ArmybookEntry("Hunting Chariot", 4, 4, 4, 2, ArmorType.LIGHT, 0, 0, "9\u201d", "9\u201d", 8, 50, 100, ModelHeight.LARGE, ModelType.CONSTRUCT, false, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Corsair"), offensiveProfileRepository.findSpecific("Elven Horse"), offensiveProfileRepository.findSpecific("Chassis (Light Chariot)")), Arrays.asList(2, 2, 1), Arrays.asList(0, 0, 0), Arrays.asList(0, 0, 0), Arrays.asList(Arrays.asList(WeaponType.LIGHT_LANCE), Arrays.asList(WeaponType.NONE), Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE), Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.SWIFTSTRIDE), Arrays.asList()),
                new ArmybookEntry("Dread Reaper", 4, 1, 4, 0, ArmorType.LIGHT, 0, 0, "5\u201d", "5\u201d", 8, 60, 60, ModelHeight.STANDARD, ModelType.CONSTRUCT, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Dread Legionnaire")), Arrays.asList(2), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.HANDWEAPON)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.WARMACHINE), Arrays.asList()),
                new ArmybookEntry("Kraken", 5, 5, 5, 3, ArmorType.NONE, 0, 0, "6\u201d", "12\u201d", 8, 50, 100, ModelHeight.GIGANTIC, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Kraken")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(SpecialRule.STRIDER_WATER), Arrays.asList()),
                new ArmybookEntry("Hydra", 5, 5, 5, 3, ArmorType.NONE, 4, 0, "6\u201d", "12\u201d", 8, 50, 100, ModelHeight.GIGANTIC, ModelType.BEAST, true, 1, 1, 1, 0, 0, 0, Arrays.asList(offensiveProfileRepository.findSpecific("Hydra")), Arrays.asList(1), Arrays.asList(0), Arrays.asList(1), Arrays.asList(Arrays.asList(WeaponType.NONE)), Arrays.asList(Arrays.asList(WeaponTypeShooting.NONE)), Armybook.DREAD_ELVES, Arrays.asList(), Arrays.asList())
        ));
    }

    public ArmybookEntry findSpecific(String name) {
        for (ArmybookEntry armybookEntry : armybookEntryList) {
            if (armybookEntry.getName().equals(name)) {
                return armybookEntry;
            }
        }
        return null;
    }

    public List<String> getNamesAll() {
        List<String> allNames = new ArrayList<>();
        for (ArmybookEntry armybookEntry : armybookEntryList) {
            allNames.add(armybookEntry.getName());
        }
        return allNames;
    }

    public List<String> getNamesArmybook(String armybookName) {
        List<String> names = new ArrayList<>();
        for (ArmybookEntry armybookEntry : armybookEntryList) {
            if (armybookEntry.getArmybook().toString().equals(armybookName)) {
                names.add(armybookEntry.getName());
            }
        }
        return names;
    }

    public List<String> getArmybookNames() {
        List<String> armybookNames = new ArrayList<>();
        for (ArmybookEntry armybookEntry : armybookEntryList) {
            Armybook armybook = armybookEntry.getArmybook();
            String armybookName = armybook.toString();
            if (armybookNames.contains(armybookName) == false) {
                armybookNames.add(armybookName);
            }
        }
        return armybookNames;
    }
}
